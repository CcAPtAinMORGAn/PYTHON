import math
x1=[10,5,10,4,8]

x2=[16,13,21,10,13]

x3=[3,6,4,5,3]

n=len(x1)

print("n is",n)
print("sum x1 is",sum(x1))
print("sum x2 is",sum(x2))
print("sum x3 is",sum(x3))

a=[]
for i in range(n):
    b=x1[i]*x1[i]
    a.append(b)
print("x1**2 is",a,"and sum of x1**2 is",sum(a))

c=[]
for j in range(n):
    d=x2[j]*x2[j]
    c.append(d)
print("x2**2 is",c,"and sum of x2**2 is",sum(c))

e=[]
for k in range(n):
    f=x3[k]*x3[k]
    e.append(f)
print("x3**2 is",e,"and sum of x3**2 is",sum(e))


#------------------------------------------------- X1*X2   X1*X3 X2*X3
h=[]
for l in range(n):
    y=x1[l]*x2[l]
    h.append(y)
print("x1*X2 is",h,"and sum of x1*X2 is",sum(h))

k=[]
for o in range(n):
    m=x1[o]*x3[o]
    k.append(m)
print("x1*X3 is",k,"and sum of X1*X3 is",sum(k))

x2x3=[]
for n in range(n):
    x2x3_logic=x2[n]*x3[n]
    x2x3.append(x2x3_logic)
print("X2*X3 is",x2x3,"and sum of X2*X3 is",sum(x2x3))


























#-------------------------------------------------

X=346  
Y=38

N=38
G=34
# Define symbolic variables
from sympy import symbols

b1, b2 = symbols('b1 b2')

# Expressions for x and y
x_expr = ((X * b1) - (Y * b2) - 194) 
y_expr = ((N * b1) - (G * b2) - 57) 

# Simplify the expressions and print them
from sympy import expand

x_expanded = expand(x_expr)
y_expanded = expand(y_expr)
Z= (x_expanded*34) - (y_expanded*38)
# Print the expanded forms
print("Equation 1 is", x_expanded)
print("Equation 2 is", y_expanded)
print("Equation 1 * 34 - Equation 2 * 38 =",Z)
print("\n")

from sympy import symbols, Eq, solve


# Define the equation 0 = 10320*b1 - 4430
equation = Eq(Z, 0)

solution_b1 = solve(equation, b1)

# Convert the solution to decimal
decimal_solution_b1 = solution_b1[0].evalf()

# Print the result as a decimal
print("b1 =", decimal_solution_b1)
print("\n")
# ----------------------------------------------------------------------------
summision_x1=37
summision_x2=73
summision_x3=21
n=5

from sympy import symbols

a = symbols('a')
# b2 is already declared above in symbols

summision_x1_equation=(n*a)+(decimal_solution_b1*summision_x2)+(b2*summision_x3)-summision_x1

from sympy import expand

x_summision_x1_expanded = expand(summision_x1_equation)

# Print the expanded forms
print("Equation summision_x1 =", x_summision_x1_expanded)

# ------------------------------------------------
# a is already declared above in symbols

summision_x2_raised_2=1135
summision_x2_x3=299
summision_x1_x2=579
# summision_x2=73 is already written above

summision_x1_x2_equation=(a*summision_x2)+(decimal_solution_b1*summision_x2_raised_2)+(b2*summision_x2_x3)-summision_x1_x2

summision_x1_x2_equation_expanded=expand(summision_x1_x2_equation)

print("Equation summision_x1_x2 =",summision_x1_x2_equation_expanded)

Equation_a_subtract_b = (x_summision_x1_expanded*73) - (summision_x1_x2_equation_expanded*5)

print("Equation a * 73  - Equation b * 5 =",Equation_a_subtract_b)

from sympy import symbols, Eq, solve


# Define the equation 0 = 10320*b1 - 4430
equation2 = Eq(Equation_a_subtract_b, 0)

solution_b2 = solve(equation2, b2)

# Convert the solution to decimal
decimal_solution_b2 = solution_b2[0].evalf()

print("\n")

# Print the result as a decimal
print("b2 =", decimal_solution_b2)

# substituting value of b1 and b2 to get value of a in summision_x1 Equation 

print("\n")
a = -((decimal_solution_b1*summision_x2)+(decimal_solution_b2*summision_x3)-summision_x1)/n

print("a =",a)

x2_given_extra_value = 16
x3_given_extra_value = 4

x1_predicted_value = a + (decimal_solution_b1*x2_given_extra_value) + (decimal_solution_b2*x3_given_extra_value)

print("x1_predicted_value =",x1_predicted_value)

